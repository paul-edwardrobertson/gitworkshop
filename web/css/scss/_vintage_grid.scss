@import 'decimal';

//  GROUPING  ==========================================
.vgrid-group { clear: both; padding: 0px; margin: 0px; zoom:1; /* For IE 6/7 (trigger hasLayout) */
	&:before, &:after { content: ""; display: table; }
	&:after { clear: both; }
}

// ===============
// NEW GRID
// ===============
$vgrid-margin: 3%;

.vgrid-cell { display: block; float:left; margin-top:0;  }
.vgrid-cell:first-child { margin-left:0; }

@mixin v-equal-grid($startAt, $margin) {
	$x: ($startAt - 1)*$margin;
	$y: 100 - $x;
	$z: $y / $startAt; 
	width: decimal-round($z, 2, 'floor'); 
	margin-left: $margin;
	margin-bottom:1em;
		&:nth-child(#{$startAt - 1}n+1) { margin-left:$margin; clear:none; }
		&:nth-child(#{$startAt}n+1) { margin-left:0; clear:both; }
}


@mixin v-unequal-grid($groupCols,$cols,$totalCols,$margin,$firstchild) {		
	$totalMargin: ($totalCols - 1) * $margin;
	$x: 100 - $totalMargin;							// amount to divide cols by
	$y: $x / $totalCols; 							// single col width 
	$z: ($cols*$y)+(($cols - 1) * $margin);			// col widths + margin widths
	width: decimal-round($z, 2, 'floor');
	
	@if $firstchild == 1 { margin-left: 0; }
	@if $firstchild != 1 { margin-left: $margin; }
}